{"ast":null,"code":"var _jsxFileName = \"/Users/vuongnguyen/Desktop/reactjs/netflix-clone-app/src/Row.js\",\n    _s = $RefreshSig$();\n\nimport axios from './axios';\nimport React, { useEffect, useState } from 'react';\nimport './Row.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Row({\n  title,\n  fetchURL,\n  isLargeRow = false\n}) {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const baseURLImage = 'https://image.tmdb.org/t/p/original/';\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchURL);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchURL]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `${baseURLImage}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n      alt: movie.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["/Users/vuongnguyen/Desktop/reactjs/netflix-clone-app/src/Row.js"],"names":["axios","React","useEffect","useState","Row","title","fetchURL","isLargeRow","movies","setMovies","baseURLImage","fetchData","request","get","data","results","map","movie","poster_path","backdrop_path","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,CAAa;AAACC,EAAAA,KAAD;AAAOC,EAAAA,QAAP;AAAgBC,EAAAA,UAAU,GAAC;AAA3B,CAAb,EAAgD;AAAA;;AAC5C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMO,YAAY,GAAC,sCAAnB;AAEAR,EAAAA,SAAS,CAAC,MAAI;AACV,mBAAeS,SAAf,GAA0B;AACtB,YAAMC,OAAO,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAUP,QAAV,CAAtB;AACAG,MAAAA,SAAS,CAACG,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;AACA,aAAOH,OAAP;AACH;;AAEDD,IAAAA,SAAS;AACZ,GARQ,EAQP,CAACL,QAAD,CARO,CAAT;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAA,gBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKG,MAAM,CAACQ,GAAP,CAAWC,KAAK,iBACb;AAAK,MAAA,GAAG,EAAG,GAAEP,YAAa,GAAEH,UAAU,GAAGU,KAAK,CAACC,WAAT,GAAuBD,KAAK,CAACE,aAAc,EAAjF;AAAoF,MAAA,GAAG,EAAEF,KAAK,CAACG;AAA/F;AAAA;AAAA;AAAA;AAAA,YADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAtBQhB,G;;KAAAA,G;AAwBT,eAAeA,GAAf","sourcesContent":["import axios from './axios';\nimport React,{useEffect,useState} from 'react'\nimport './Row.css'\n\nfunction Row({title,fetchURL,isLargeRow=false}) {\n    const [movies, setMovies] = useState([]);\n    const baseURLImage='https://image.tmdb.org/t/p/original/';\n\n    useEffect(()=>{\n        async function fetchData(){\n            const request = await axios.get(fetchURL);\n            setMovies(request.data.results);\n            return request;\n        }\n\n        fetchData();\n    },[fetchURL]);\n\n    return (\n        <div className='row'>\n            <h2>{title}</h2>\n            {movies.map(movie => (\n                <img src={`${baseURLImage}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name}/>\n            ))}\n        </div>\n    )\n}\n\nexport default Row\n"]},"metadata":{},"sourceType":"module"}