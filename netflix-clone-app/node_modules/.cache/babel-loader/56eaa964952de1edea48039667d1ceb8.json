{"ast":null,"code":"import _regeneratorRuntime from\"/Users/vuongnguyen/Desktop/reactjs/netflix-clone-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/vuongnguyen/Desktop/reactjs/netflix-clone-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/vuongnguyen/Desktop/reactjs/netflix-clone-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import axios from'./axios';import React,{useEffect,useState}from'react';import'./Row.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Row(_ref){var title=_ref.title,fetchURL=_ref.fetchURL,_ref$isLargeRow=_ref.isLargeRow,isLargeRow=_ref$isLargeRow===void 0?false:_ref$isLargeRow;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];var baseURLImage='https://image.tmdb.org/t/p/original/';useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var request;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(fetchURL);case 2:request=_context.sent;setMovies(request.data.results);return _context.abrupt(\"return\",request);case 5:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[fetchURL]);return/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"h2\",{children:title}),/*#__PURE__*/_jsx(\"div\",{className:\"row_posters\",children:movies.map(function(movie){return(isLargeRow&&movie.poster_path||!isLargeRow&&movie.backdrop_path)&&/*#__PURE__*/_jsx(\"img\",{src:\"\".concat(baseURLImage).concat(isLargeRow?movie.poster_path:movie.backdrop_path),alt:movie.name,className:\"row_poster \".concat(isLargeRow&&'row_poster_large')},movie.id);})})]});}export default Row;","map":{"version":3,"sources":["/Users/vuongnguyen/Desktop/reactjs/netflix-clone-app/src/Row.js"],"names":["axios","React","useEffect","useState","Row","title","fetchURL","isLargeRow","movies","setMovies","baseURLImage","fetchData","get","request","data","results","map","movie","poster_path","backdrop_path","name","id"],"mappings":"kZAAA,MAAOA,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,KAAP,EAAcC,SAAd,CAAwBC,QAAxB,KAAuC,OAAvC,CACA,MAAO,WAAP,C,wFAEA,QAASC,CAAAA,GAAT,MAAgD,IAAlCC,CAAAA,KAAkC,MAAlCA,KAAkC,CAA5BC,QAA4B,MAA5BA,QAA4B,sBAAnBC,UAAmB,CAAnBA,UAAmB,0BAAR,KAAQ,iBAC5C,cAA4BJ,QAAQ,CAAC,EAAD,CAApC,wCAAOK,MAAP,eAAeC,SAAf,eACA,GAAMC,CAAAA,YAAY,CAAC,sCAAnB,CAEAR,SAAS,CAAC,UAAI,SACKS,CAAAA,SADL,qIACV,qKAC0BX,CAAAA,KAAK,CAACY,GAAN,CAAUN,QAAV,CAD1B,QACUO,OADV,eAEIJ,SAAS,CAACI,OAAO,CAACC,IAAR,CAAaC,OAAd,CAAT,CAFJ,gCAGWF,OAHX,wDADU,4CAOVF,SAAS,GACZ,CARQ,CAQP,CAACL,QAAD,CARO,CAAT,CAUA,mBACI,aAAK,SAAS,CAAC,KAAf,wBACI,oBAAKD,KAAL,EADJ,cAEI,YAAK,SAAS,CAAC,aAAf,UACKG,MAAM,CAACQ,GAAP,CAAW,SAACC,KAAD,QACR,CAAEV,UAAU,EAAIU,KAAK,CAACC,WAArB,EAAsC,CAACX,UAAD,EAAeU,KAAK,CAACE,aAA5D,gBACI,YAEI,GAAG,WAAKT,YAAL,SAAoBH,UAAU,CAAGU,KAAK,CAACC,WAAT,CAAuBD,KAAK,CAACE,aAA3D,CAFP,CAGI,GAAG,CAAEF,KAAK,CAACG,IAHf,CAII,SAAS,sBAAgBb,UAAU,EAAI,kBAA9B,CAJb,EACSU,KAAK,CAACI,EADf,CAFI,EAAX,CADL,EAFJ,GADJ,CAiBH,CAED,cAAejB,CAAAA,GAAf","sourcesContent":["import axios from './axios';\nimport React,{useEffect,useState} from 'react'\nimport './Row.css'\n\nfunction Row({title,fetchURL,isLargeRow=false}) {\n    const [movies, setMovies] = useState([]);\n    const baseURLImage='https://image.tmdb.org/t/p/original/';\n\n    useEffect(()=>{\n        async function fetchData(){\n            const request = await axios.get(fetchURL);\n            setMovies(request.data.results);\n            return request;\n        }\n\n        fetchData();\n    },[fetchURL]);\n\n    return (\n        <div className='row'>\n            <h2>{title}</h2>\n            <div className='row_posters'>\n                {movies.map((movie) => (\n                    ((isLargeRow && movie.poster_path) || (!isLargeRow && movie.backdrop_path)) && (\n                        <img \n                            key={movie.id}\n                            src={`${baseURLImage}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} \n                            alt={movie.name}\n                            className={`row_poster ${isLargeRow && 'row_poster_large'}`}\n                        />\n                    )\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Row\n"]},"metadata":{},"sourceType":"module"}